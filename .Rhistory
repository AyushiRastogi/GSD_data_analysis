lapply(my_packages, library, character.only = TRUE)
percentage_distribution <-function(dat){
return(round(prop.table(table(dat),2)*100))
}
setwd("~/Desktop/DA")  # set current working directory
data<-read.csv("responses.csv",header=T,stringsAsFactors=T,na.strings = c(""," ")) # import file with headers and set strings as factors
## Cleaning
# Select a subset of responses deemed relevant and rename it
data<-data[c(1,3:10,15:21,54:59,75:78,80,82,2)]
names(data)<-c("response.id","motivation.full.time.job","motivation.hobby","motivation.volunteer.for.free",
"motivation.learn.something.new","motivation.school","motivation.help.get.job",
"motivation.meet.new.people","motivation.get.paid",
"frequency.contribution",
"selection.how.software.is.build","selection.project.goal.align",
"selection.friends.contribute","selection.project.welcoming",
"selection.easy.to.join","selection.saw.on.social.media",
"continue.interaction.with.welcoming.contributors","continue.connects.with.people.worldwide",
"continue.low.stress.levels","continue.exciting.tasks","continue.challenging.tasks",
"continue.being.paid","important.same.geographic.region","challenging.speak.different.language",
"helpful.translation.tools","important.same.gender.identity","gender","region","country")
#View(data)
# Remove empty responses
data<-data[!apply(is.na(data[,-c(1,29)]), 1, all),] # Remove empty rows excluding response ID and country information derived from the survey
data$gender<-ordered(data$gender,levels=c("Man","Woman","Prefer not to disclose",NA))
levels(data$gender)<-c("Man","Woman",NA)
data$region<-factor(sub("[[:lower:]].\t","",data$region))
# Combine regions into broader category
data$regionl1<-data$region
data$regionl<-data$region
levels(data$regionl)<-c("Oceania","Oceania","Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe")
levels(data$regionl1)<-c(NA,NA,"Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe") # Oceania is also assigned NA
data$regionl<-ordered(data$regionl,levels=c("Europe","Asia","Americas","Africa","Oceania"))
data$regionl1<-ordered(data$regionl1,levels=c("Europe","Asia","Americas","Africa"))
table(data[,c("regionl1","gender")])
chisq.test(table(data[,c("regionl1","gender")]))
chisq.test(table(data[1:3,c("regionl1","gender")]))
data[1:3,c("regionl1","gender")]
data[,c("regionl1","gender")]
data[which(data$regionl1=="Africa"),c("regionl1","gender")]
data[!which(data$regionl1=="Africa"),c("regionl1","gender")]
data[which(data$regionl1!="Africa"),c("regionl1","gender")]
data[which(data$regionl1!="Africa"),c("regionl1","gender")]
chisq.test(table(data[which(data$regionl1!="Africa"),c("regionl1","gender")])
chisq.test(table(data[which(data$regionl1!="Africa"),c("regionl1","gender")]))
data[which(data$regionl1!="Africa"),c("regionl1","gender")]
table(data[which(data$regionl1!="Africa"),c("regionl1","gender")])
table(data[which(data$regionl1!="Africa"),c("regionl1","gender")])[1:3,]
chisq.test(table(data[,c("regionl1","gender")])[1:3,])
chisq.test(table(data[,c("regionl1","gender")])[1:2,])
chisq.test(table(data[,c("regionl1","gender")])[1:3,])
chisq.test(table(data[,c("regionl1","gender")])[1:4,])
chisq.test(table(data[,c("regionl1","gender")])[1:4,])
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")]))
dat<-motivation
motivation<-data[,c(2:9,27,30)]
motivation<-melt(motivation, id=c("regionl1","gender"),na.rm=T)[,c(1,2,4)]
dat<-motivation
levels(dat$value)<-c("full time job","hobby","volunteer/free","learn new","university","get a job","meet people","get paid")
ggplot(data=dat, aes(x=fct_infreq(value))) +
geom_bar() + xlab("") +
geom_text(stat='count', aes(label=..count..), vjust=-0.4) +
theme(axis.text.x = element_text(angle = 45))
chisq.test(table(motivation[,c("value","gender")]))
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")])[1:4,])
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")])[])
chisq.test(table(motivation[,c("value","gender")])[1:4,]) # across top 4 categories
percentage_distribution(motivation[,c("value","gender")])
percentage_distribution(motivation[,c("value","regionl1")])
chisq.test(table(motivation[,c("value","gender")])[])
chisq.test(table(motivation[,c("value","gender")])[1:5,]) # across top 4 categories
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")])[])
chisq.test(table(motivation[,c("value","gender")])[1:5,]) # across top 4 categories
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")])[])
chisq.test(table(motivation[,c("value","gender")])[1:7,]) # across top 4 categories
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","gender")])[])
chisq.test(table(motivation[,c("value","gender")])[1:4,]) # across top 4 categories
percentage_distribution(motivation[,c("value","gender")])
chisq.test(table(motivation[,c("value","regionl1")]))
percentage_distribution(motivation[,c("value","regionl1")])
chisq.test(table(motivation[,c("value","regionl1")]))
chisq.test(table(motivation[,c("value","regionl1")])[1:4,])
percentage_distribution(motivation[,c("value","regionl1")])
table(motivation[,c("value","regionl1")])[1:4,]
data[,"frequency.contribution"]<-ordered(data[,"frequency.contribution"],
c("Hourly","Daily","Weekly","Monthly"))
data[,"frequency.contribution"]<-ordered(data[,"frequency.contribution"],
c("Hourly","Daily","Weekly","Monthly"))
data[,"frequency.contribution"]<-ordered(data[,"frequency.contribution"],
c("Hourly","Daily","Weekly","Monthly"))
table(data[,"frequency.contribution"])
chisq.test(table(data[,c("frequency.contribution","gender")]))
percentage_distribution(data[,c("frequency.contribution","gender")])
chisq.test(table(data[,c("frequency.contribution","gender")]))
percentage_distribution(data[,c("frequency.contribution","regionl1")])
chisq.test(table(data[,c("frequency.contribution","regionl1")]))
percentage_distribution(data[,c("frequency.contribution","regionl1")])
selection<-data[,c(11:16,27,30)]
selection[,1:6]<-lapply(selection[,1:6],function(X) {ordered(X,levels=c("Very important","Important","Neutral","Less important","Not at all important"))})
for(i in 1:6){
levels(selection[,i])<-c("Important","Important","Neutral","Not important","Not important")
}
table(selection[,"selection.how.software.is.build"])
table(selection[,"selection.project.goal.align"])
table(selection[,"selection.friends.contribute"])
table(selection[,"selection.project.welcoming"])
table(selection[,"selection.easy.to.join"])
table(selection[,"selection.saw.on.social.media"])
table(selection[,"selection.how.software.is.build"])[,c(1,3)]
table(selection[,"selection.how.software.is.build"])[c(1,3)]
chisq.test(table(selection[,"selection.how.software.is.build"])[c(1,3)])
table(selection[,"selection.how.software.is.build"])
table(selection[,"selection.project.goal.align"])
table(selection[,"selection.friends.contribute"])
table(selection[,"selection.project.welcoming"])
table(selection[,"selection.easy.to.join"])
table(selection[,"selection.saw.on.social.media"])
chisq.test(table(selection[,"selection.how.software.is.build"])[c(1,3)])
table(selection[,"selection.how.software.is.build"])
chisq.test(table(selection[,"selection.project.goal.align"])[c(1,3)])
table(selection[,"selection.project.goal.align"])
chisq.test(table(selection[,"selection.friends.contribute"])[c(1,3)])
table(selection[,"selection.friends.contribute"])
chisq.test(table(selection[,"selection.project.welcoming"])[c(1,3)])
table(selection[,"selection.project.welcoming"])
chisq.test(table(selection[,"selection.easy.to.join"])[c(1,3)])
table(selection[,"selection.easy.to.join"])
chisq.test(table(selection[,"selection.saw.on.social.media"])[c(1,3)])
table(selection[,"selection.saw.on.social.media"])
lapply(1:6,function(X){percentage_distribution(selection[,c(X,7)])})
table(selection[,c(1,7)])
table(selection[,c(1,7)])[c(1,3),]
chisq.test(table(selection[,c(1,7)])[c(1,3),])
lapply(1:6,function(X){chisq.test(table(selection[,c(X,7)])[c(1,3),])})
lapply(1:6,function(X){percentage_distribution(selection[,c(X,7)])})
# Packages required
if(!require("dplyr")) install.packages("dplyr")
if(!require("knitr")) install.packages("knitr")
if(!require("reshape")) install.packages("reshape")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("forcats")) install.packages("forcats")
my_packages<-c("dplyr","knitr","reshape","ggplot2","forcats")
lapply(my_packages, library, character.only = TRUE)
percentage_distribution <-function(dat){
return(round(prop.table(table(dat),2)*100,0))
}
setwd("~/Desktop/DA")  # set current working directory
data<-read.csv("responses.csv",header=T,stringsAsFactors=T,na.strings = c(""," ")) # import file with headers and set strings as factors
## Cleaning
# Select a subset of responses deemed relevant and rename it
data<-data[c(1,3:10,15:21,54:59,75:78,80,82,2)]
names(data)<-c("response.id","motivation.full.time.job","motivation.hobby","motivation.volunteer.for.free",
"motivation.learn.something.new","motivation.school","motivation.help.get.job",
"motivation.meet.new.people","motivation.get.paid",
"frequency.contribution",
"selection.how.software.is.build","selection.project.goal.align",
"selection.friends.contribute","selection.project.welcoming",
"selection.easy.to.join","selection.saw.on.social.media",
"continue.interaction.with.welcoming.contributors","continue.connects.with.people.worldwide",
"continue.low.stress.levels","continue.exciting.tasks","continue.challenging.tasks",
"continue.being.paid","important.same.geographic.region","challenging.speak.different.language",
"helpful.translation.tools","important.same.gender.identity","gender","region","country")
#View(data)
# Remove empty responses
data<-data[!apply(is.na(data[,-c(1,29)]), 1, all),] # Remove empty rows excluding response ID and country information derived from the survey
# Packages required
if(!require("dplyr")) install.packages("dplyr")
if(!require("knitr")) install.packages("knitr")
if(!require("reshape")) install.packages("reshape")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("forcats")) install.packages("forcats")
my_packages<-c("dplyr","knitr","reshape","ggplot2","forcats")
lapply(my_packages, library, character.only = TRUE)
percentage_distribution <-function(dat){
return(round(prop.table(table(dat),2)*100,0))
}
setwd("~/Desktop/DA")  # set current working directory
data<-read.csv("responses.csv",header=T,stringsAsFactors=T,na.strings = c(""," ")) # import file with headers and set strings as factors
## Cleaning
# Select a subset of responses deemed relevant and rename it
data<-data[c(1,3:10,15:21,54:59,75:78,80,82,2)]
names(data)<-c("response.id","motivation.full.time.job","motivation.hobby","motivation.volunteer.for.free",
"motivation.learn.something.new","motivation.school","motivation.help.get.job",
"motivation.meet.new.people","motivation.get.paid",
"frequency.contribution",
"selection.how.software.is.build","selection.project.goal.align",
"selection.friends.contribute","selection.project.welcoming",
"selection.easy.to.join","selection.saw.on.social.media",
"continue.interaction.with.welcoming.contributors","continue.connects.with.people.worldwide",
"continue.low.stress.levels","continue.exciting.tasks","continue.challenging.tasks",
"continue.being.paid","important.same.geographic.region","challenging.speak.different.language",
"helpful.translation.tools","important.same.gender.identity","gender","region","country")
#View(data)
# Remove empty responses
data<-data[!apply(is.na(data[,-c(1,29)]), 1, all),] # Remove empty rows excluding response ID and country information derived from the survey
data$gender<-ordered(data$gender,levels=c("Man","Woman","Prefer not to disclose",NA))
levels(data$gender)<-c("Man","Woman",NA)
data$region<-factor(sub("[[:lower:]].\t","",data$region)) # removing extraneous text
# Combine regions into broader category - level 1
data$regionl1<-data$region
data$regionl<-data$region
levels(data$regionl)<-c("Oceania","Oceania","Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe")
data$regionl<-ordered(data$regionl,levels=c("Europe","Asia","Americas","Africa","Oceania"))
levels(data$regionl1)<-c(NA,NA,"Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe") # Oceania is also assigned NA since we have insufficient responses from the region
data$regionl1<-ordered(data$regionl1,levels=c("Europe","Asia","Americas","Africa"))
summary(data$gender)
summary(data$gender)
chisq.test(table(data$gender))
chisq.test(table(data$regionl1))
summary(data$regionl)
chisq.test(table(data$regionl))
summary(data$regionl)
chisq.test(table(data$regionl))
summary(data$regionl)
chisq.test(table(data$regionl))
summary(data$regionl)
chisq.test(table(data$regionl))
summary(data$regionl)
chisq.test(table(data$regionl1))
summary(data$regionl1)
chisq.test(table(data$regionl1))
summary(data$regionl1)
table(data$regionl1)
percentage_distribution(motivation[,c("value","gender")])
motivation<-data[,c(2:9,27,30)]
motivation<-melt(motivation, id=c("regionl1","gender"),na.rm=T)[,c(1,2,4)]
dat<-motivation
levels(dat$value)<-c("full time job","hobby","volunteer/free","learn new","university","get a job","meet people","get paid")
ggplot(data=dat, aes(x=fct_infreq(value))) +
geom_bar() + xlab("") +
geom_text(stat='count', aes(label=..count..), vjust=-0.4) +
theme(axis.text.x = element_text(angle = 45))
percentage_distribution(motivation[,c("value","gender")])
percentage_distribution(motivation[,c("value","gender")])[1,]
chisq.test(percentage_distribution(motivation[,c("value","gender")])[1,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[2,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[3,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[4,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[5,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[5,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[6,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[7,])
chisq.test(percentage_distribution(motivation[,c("value","gender")])[8,])
percentage_distribution(motivation[,c("value","gender")])[8,]
percentage_distribution(motivation[,c("value","gender")])
lapply(1:8,function(i){chisq.test(percentage_distribution(motivation[,c("value","gender")])[i,])})
table(motivation[,c("value","gender")]
)
table(motivation[,c("value","gender")])[i,])
table(motivation[,c("value","gender")])[1,])
table(motivation[,c("value","gender")])[1,]
percentage_distribution(motivation[,c("value","gender")])
#lapply(1:8,function(i){chisq.test(percentage_distribution(motivation[,c("value","gender")])[i,])})
lapply(1:8,function(i){chisq.test(table(motivation[,c("value","gender")])[i,])})
table(motivation[,c("value","regionl1")])
table(motivation[,c("value","regionl1")])[1]
table(motivation[,c("value","regionl1")])[1,]
chisq.test(data[,"frequency.contribution"])
selection<-data[,c(11:16,27,30)]
selection[,1:6]<-lapply(selection[,1:6],function(X) {ordered(X,levels=c("Very important","Important","Neutral","Less important","Not at all important"))})
for(i in 1:6){
levels(selection[,i])<-c("Important","Important","Neutral","Not important","Not important")
}
lapply(1:6,function(X){table(selection[,c(X,7)])})
lapply(1:6,function(X){chisq.test(table(selection[,c(X,7)])[c(1,3),])})
lapply(1:6,function(X){table(selection[,c(X,7)])})
lapply(1:6,function(X){chisq.test(table(selection[,c(X,7)])[c(1,3),])})
lapply(1:6,function(X){table(selection[,c(X,7)])})
continue<-data[,c(17:22,27,30)]
continue[,1:6]<-lapply(continue[,1:6],function(X) {ordered(X,levels=c("Very important","Important","Neutral","Less important","Not at all important"))})
for(i in 1:6){
levels(continue[,i])<-c("Important","Important","Neutral","Not important","Not important")
}
table(continue[,"continue.interaction.with.welcoming.contributors"])
table(continue[,"continue.interaction.with.welcoming.contributors"])[1,3]
table(continue[,"continue.interaction.with.welcoming.contributors"])[,c(1,3)]
table(continue[,"continue.interaction.with.welcoming.contributors"])[c(1,3)]
table(continue[,"continue.interaction.with.welcoming.contributors"])
chisq.test(table(continue[,"continue.interaction.with.welcoming.contributors"])[c(1,3)])
table(continue[,"continue.connects.with.people.worldwide"])
chisq.test(table(continue[,"continue.connects.with.people.worldwide"])[c(1,3)])
table(continue[,"continue.low.stress.levels"])
chisq.test(table(continue[,"continue.low.stress.levels"])[c(1,3)])
table(continue[,"continue.exciting.tasks"])
chisq.test(table(continue[,"continue.exciting.tasks"])[c(1,3)])
table(continue[,"continue.challenging.tasks"])
chisq.test(table(continue[,"continue.exciting.tasks"])[c(1,3)])
table(continue[,"continue.being.paid"])
chisq.test(table(continue[,"continue.being.paid"])[c(1,3)])
lapply(1:6,function(X){chisq.test(table(continue[,c(X,7)])[c(1,3)])})
lapply(1:6,function(X){percentage_distribution(continue[,c(X,7)])})
chisq.test(table(continue[,c(1,7)])[c(1,3)])
table(continue[,c(1,7)])[c(1,3)]
lapply(1:6,function(X){chisq.test(percentage_distribution(continue[,c(X,7)])[c(1,3)])})
lapply(1:6,function(X){percentage_distribution(continue[,c(X,7)])})
percentage_distribution(continue[,c(X,7)]
)
percentage_distribution(continue[,c(1,7)])
percentage_distribution(continue[,c(1,7)])[c(1,3)]
percentage_distribution(continue[,c(1,7)])[c(1,3),]
lapply(1:6,function(X){chisq.test(percentage_distribution(continue[,c(X,7)])[c(1,3),])})
lapply(1:6,function(X){percentage_distribution(continue[,c(X,7)])})
percentage_distribution(continue[,c(1,8)])[c(1,3),]
lapply(1:6,function(X){chisq.test(percentage_distribution(continue[,c(X,8)])[c(1,3),])})
lapply(1:6,function(X){percentage_distribution(continue[,c(X,8)])})
data[,"important.same.geographic.region"]<-ordered(data[,"important.same.geographic.region"],c("Very Important","Important","Neutral","Less important","Not at all important"))
levels(data[,"important.same.geographic.region"])<-c("Important","Important","Neutral","Not important","Not important")
round(prop.table(table(data[,"important.same.geographic.region"]))*100)
table(data[,"important.same.geographic.region"]
)
percentage_distribution(data[,"important.same.geographic.region"])
data[,"important.same.geographic.region"]
percentage_distribution(data[,"important.same.geographic.region"])
round(prop.table(table(data[,"important.same.geographic.region"]))*100)
round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)
round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)[1,3]
round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)[c(1,3)]
round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)
chisq.test(round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)[c(1,3)])
percentage_distribution(data[,c("important.same.geographic.region","gender")])
percentage_distribution(data[,c("important.same.geographic.region","gender")])
percentage_distribution(data[,c("important.same.geographic.region","gender")])[c(1,3),]
chisq.test(percentage_distribution(data[,c("important.same.geographic.region","gender")])[c(1,3),])
percentage_distribution(data[,c("important.same.geographic.region","gender")])
chisq.test(percentage_distribution(data[,c("important.same.geographic.region","regionl1")])[c(1,3),])
percentage_distribution(data[,c("important.same.geographic.region","regionl1")])
data[,"challenging.speak.different.language"]<-ordered(data[,"challenging.speak.different.language"],c("Very challenging","Challenging","Neutral","Less challenging","Not at all challenging"))
levels(data[,"challenging.speak.different.language"])<-c("Very challenging","Very challenging","Neutral","Not challenging","Not challenging")
data[,"challenging.speak.different.language"]<-ordered(data[,"challenging.speak.different.language"],c("Very challenging","Challenging","Neutral","Less challenging","Not at all challenging"))
levels(data[,"challenging.speak.different.language"])<-c("Very challenging","Very challenging","Neutral","Not challenging","Not challenging")
round(prop.table(table(data[,"challenging.speak.different.language"]))*100)
round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)
percentage_distribution(data[,"challenging.speak.different.language"])
round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)
round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)[c(1,3)]
chisq.test(round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)[c(1,3)])
round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)
data[,"challenging.speak.different.language"]<-ordered(data[,"challenging.speak.different.language"],c("Very challenging","Challenging","Neutral","Less challenging","Not at all challenging"))
levels(data[,"challenging.speak.different.language"])<-c("Very challenging","Very challenging","Neutral","Not challenging","Not challenging")
data[,"challenge.speak.different.language"]
data[,"challenging.speak.different.language"]
data[,"challenging.speak.different.language"]<-ordered(data[,"challenging.speak.different.language"],c("Very challenging","Challenging","Neutral","Less challenging","Not at all challenging"))
levels(data[,"challenging.speak.different.language"])<-c("Challenging","Challenging","Neutral","Not challenging","Not challenging")
round(prop.table(table(data[,"challenging.speak.different.language"]))*100,0)
View(data)
percentage_distribution(data[,c("challenging.speak.different.language","gender")])
percentage_distribution(data[,c("challenging.speak.different.language","gender")])[c(1,3)]
percentage_distribution(data[,c("challenging.speak.different.language","gender")])
percentage_distribution(data[,c("challenging.speak.different.language","gender")])[c(1,3),]
chisq.test(percentage_distribution(data[,c("challenging.speak.different.language","gender")])[c(1,3),])
percentage_distribution(data[,c("challenging.speak.different.language","gender")])
chisq.test(percentage_distribution(data[,c("challenging.speak.different.language","regionl1")])[c(1,3),])
percentage_distribution(data[,c("challenging.speak.different.language","regionl1")])
data[,"helpful.translation.tools"]<-ordered(data[,"helpful.translation.tools"],c("Very helpful","Helpful","Neutral","Less helpful","Not at all helpful"))
levels(data[,"helpful.translation.tools"])<-c("Helpful","Helpful","Neutral","Not helpful","Not helpful")
round(prop.table(table(data[,"helpful.translation.tools"]))*100)
chisq.test(round(prop.table(table(data[,"helpful.translation.tools"]))*100,0))
round(prop.table(table(data[,"helpful.translation.tools"]))*100,0)
percentage_distribution(data[,c("helpful.translation.tools","gender")])
percentage_distribution(data[,c("helpful.translation.tools","gender")])[c(1,3),]
chisq.test(percentage_distribution(data[,c("helpful.translation.tools","gender")])[c(1,3),])
percentage_distribution(data[,c("helpful.translation.tools","gender")])
chisq.test(percentage_distribution(data[,c("helpful.translation.tools","regionl1")])[c(1,3),])
percentage_distribution(data[,c("helpful.translation.tools","regionl1")])
data[,c("important.same.gender.identity")]<-ordered(data[,c("important.same.gender.identity")],c("Important","Neutral","Less important","Not at all important"))
levels(data[,c("important.same.gender.identity")])<- c("Important","Neutral","Not important","Not important")
data[,c("important.same.gender.identity")]<-ordered(data[,c("important.same.gender.identity")],c("Important","Neutral","Less important","Not at all important"))
levels(data[,c("important.same.gender.identity")])<- c("Important","Neutral","Not important","Not important")
table(data[,c("important.same.gender.identity")])
table(data[,c("important.same.gender.identity")])[c(1,3)]
table(data[,c("important.same.gender.identity")])
chisq.test(table(data[,c("important.same.gender.identity")])[c(1,3)])
table(data[,c("important.same.gender.identity")])
percentage_distribution(data[,c("important.same.gender.identity","gender")])
percentage_distribution(data[,c("important.same.gender.identity","gender")])[c(1,3),]
percentage_distribution(data[,c("important.same.gender.identity","gender")])
chisq.test(percentage_distribution(data[,c("important.same.gender.identity","regionl1")])[c(1,3),])
percentage_distribution(data[,c("important.same.gender.identity","regionl1")])
setwd("~/Documents/GitHub/GSD_data_analysis")
addmargins(data[,c("regionl","gender")])
addmargins(table(data[,c("regionl","gender")]))
table(data[,c("regionl","gender")])
table(data[,c("regionl1","gender")])
install.packages("xtable")
obj<-addmargins(table(data[,c("regionl","gender")]))
print(xtable(obj,type="latex",file="distribution.tex"))
# Packages required
if(!require("dplyr")) install.packages("dplyr")
if(!require("knitr")) install.packages("knitr")
if(!require("reshape")) install.packages("reshape")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("forcats")) install.packages("forcats")
if(!require("xtable")) install.packages("xtable")
my_packages<-c("dplyr","knitr","reshape","ggplot2","forcats","xtable")
lapply(my_packages, library, character.only = TRUE)
percentage_distribution <-function(dat){
return(round(prop.table(table(dat),2)*100,0))
}
setwd("/Users/ayushirastogi/Documents/GitHub/GSD_data_analysis")  # set current working directory
data<-read.csv("responses.csv",header=T,stringsAsFactors=T,na.strings = c(""," ")) # import file with headers and set strings as factors
## Cleaning
# Select a subset of responses deemed relevant and rename it
data<-data[c(1,3:10,15:21,54:59,75:78,80,82,2)]
names(data)<-c("response.id","motivation.full.time.job","motivation.hobby","motivation.volunteer.for.free",
"motivation.learn.something.new","motivation.school","motivation.help.get.job",
"motivation.meet.new.people","motivation.get.paid",
"frequency.contribution",
"selection.how.software.is.build","selection.project.goal.align",
"selection.friends.contribute","selection.project.welcoming",
"selection.easy.to.join","selection.saw.on.social.media",
"continue.interaction.with.welcoming.contributors","continue.connects.with.people.worldwide",
"continue.low.stress.levels","continue.exciting.tasks","continue.challenging.tasks",
"continue.being.paid","important.same.geographic.region","challenging.speak.different.language",
"helpful.translation.tools","important.same.gender.identity","gender","region","country")
#View(data)
# Remove empty responses
data<-data[!apply(is.na(data[,-c(1,29)]), 1, all),] # Remove empty rows excluding response ID and country information derived from the survey
data$gender<-ordered(data$gender,levels=c("Man","Woman","Prefer not to disclose",NA))
levels(data$gender)<-c("Man","Woman",NA)
data$region<-factor(sub("[[:lower:]].\t","",data$region)) # removing extraneous text
# Combine regions into broader category - level 1
data$regionl1<-data$region
data$regionl<-data$region
levels(data$regionl)<-c("Oceania","Oceania","Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe")
data$regionl<-ordered(data$regionl,levels=c("Europe","Asia","Americas","Africa","Oceania"))
levels(data$regionl1)<-c(NA,NA,"Asia","Asia","Europe","Americas","Africa","Americas","Europe",NA,"Asia","Asia","Europe","Africa","Asia","Europe") # Oceania is also assigned NA since we have insufficient responses from the region
data$regionl1<-ordered(data$regionl1,levels=c("Europe","Asia","Americas","Africa"))
chisq.test(table(data$gender))
summary(data$gender)
chisq.test(table(data$regionl))
summary(data$regionl)
chisq.test(table(data$regionl1))
summary(data$regionl1)
addmargins(table(data[,c("regionl","gender")]))
obj<-addmargins(table(data[,c("regionl","gender")]))
print(xtable(obj,type="latex",file="distribution.tex"))
obj<-addmargins(percentage_distribution(motivation[,c("value","regionl1")]))
print(xtable(obj,type="latex",file="distribution.tex"))
obj<-percentage_distribution(motivation[,c("value","regionl1")])
print(xtable(obj,type="latex",file="distribution.tex"))
table(selection[,"selection.how.software.is.build"])
prop.table(table(selection[,"selection.how.software.is.build"]))
prop.table(table(selection[,"selection.how.software.is.build"]))*100
round(prop.table(table(selection[,"selection.how.software.is.build"]))*100,0)
table(selection[,"selection.how.software.is.build"])
table(selection[,"selection.how.software.is.build"])[c(1,3)]
round(prop.table(table(selection[,"selection.how.software.is.build"])[c(1,3)])*100,0)
chisq.test(table(selection[,c(X,7)])[c(1,3),])
chisq.test(table(selection[,c(3,7)])[c(1,3),])
table(selection[,c(3,7)])[c(1,3),]
prop.table(table(selection[,c(3,7)])[c(1,3),],2)
prop.table(table(selection[,c(3,7)])[c(1,3),],2)*100
prop.table(table(selection[,c(3,7)])[c(1,3),],2)*100
continue<-data[,c(17:22,27,30)]
continue[,1:6]<-lapply(continue[,1:6],function(X) {ordered(X,levels=c("Very important","Important","Neutral","Less important","Not at all important"))})
for(i in 1:6){
levels(continue[,i])<-c("Important","Important","Neutral","Not important","Not important")
}
continue<-data[,c(17:22,27,30)]
continue[,1:6]<-lapply(continue[,1:6],function(X) {ordered(X,levels=c("Very important","Important","Neutral","Less important","Not at all important"))})
for(i in 1:6){
levels(continue[,i])<-c("Important","Important","Neutral","Not important","Not important")
}
percentage_distribution(continue[,c(6,7)])
table(continue[,c(6,7)])
table(continue[,c(6,7)])[c(1,3)]
table(continue[,c(6,7)])[c(1,3),]
prop.table(table(continue[,c(6,7)])[c(1,3),],2)
prop.table(table(continue[,c(6,7)])[c(1,3),],2)*100
round(prop.table(table(continue[,c(6,7)])[c(1,3),],2)*100,0)
table(continue[,"continue.interaction.with.welcoming.contributors"])[c(1,3)]
round(prop.table(table(continue[,"continue.interaction.with.welcoming.contributors"])[c(1,3)])*100,0)
data[,"important.same.geographic.region"]<-ordered(data[,"important.same.geographic.region"],c("Very Important","Important","Neutral","Less important","Not at all important"))
levels(data[,"important.same.geographic.region"])<-c("Important","Important","Neutral","Not important","Not important")
ound(prop.table(table(data[,"important.same.geographic.region"]))*100,0)
round(prop.table(table(data[,"important.same.geographic.region"]))*100,0)
table(data[,"important.same.geographic.region"])
table(data[,"important.same.geographic.region"])[c(1,3)]
data[,c("important.same.geographic.region","regionl1")]
percentage_distribution(data[,c("important.same.geographic.region","regionl1")])
table(data[,c("important.same.geographic.region","regionl1")])
table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),]
prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),])
round(prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),])*100,0)
prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),]
)
prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),],2)
prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),],2)*100
ROUND(prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),],2)*100,0)
round(prop.table(table(data[,c("important.same.geographic.region","regionl1")])[c(1,3),],2)*100,0)
obj<-round(prop.table(table(data[,c("challenging.speak.different.language","regionl1")])[c(1,3),],2)*100,0)
print(xtable(obj,type="latex",file="distribution.tex"))
obj<-round(prop.table(table(data[,c("challenging.speak.different.language","regionl1")])[c(1,3),],2)*100,0)
print(xtable(obj,type="latex",file="distribution.tex"))
data[,"helpful.translation.tools"]<-ordered(data[,"helpful.translation.tools"],c("Very helpful","Helpful","Neutral","Less helpful","Not at all helpful"))
levels(data[,"helpful.translation.tools"])<-c("Helpful","Helpful","Neutral","Not helpful","Not helpful")
percentage_distribution(data[,c("helpful.translation.tools","gender")])
data[,c("important.same.gender.identity")]<-ordered(data[,c("important.same.gender.identity")],c("Important","Neutral","Less important","Not at all important"))
levels(data[,c("important.same.gender.identity")])<- c("Important","Neutral","Not important","Not important")
chisq.test(table(data[,c("important.same.gender.identity")])[c(1,3)])
table(data[,c("important.same.gender.identity")])
table(data[,c("important.same.gender.identity")])[c(1,3)]
round(prop.table(table(data[,c("important.same.gender.identity")])[c(1,3),],2)*100,0)
table(data[,c("important.same.gender.identity")])
table(data[,c("important.same.gender.identity")])[c(1,3)]
prop.table(table(data[,c("important.same.gender.identity")])[c(1,3)])
round(prop.table(table(data[,c("important.same.gender.identity")])[c(1,3)])*100,0)
